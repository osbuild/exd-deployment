---

- hosts: localhost
  vars:
    # Use a local connection to talk to the local host.
    ansible_connection: local
    # Size of the instance to deploy.
    flavor_name: ci.m1.medium
    # Image to deploy.
    image_id: b4d5fa2e-d30a-4589-8fda-ba8364e32d3c
    # Network to attach to the deployed instance.
    network: 316eeb47-1498-46b4-b39e-00ddf73bd2a5
    # Name for the server to be deployed.
    server_name: "osbuild-continuous-deployment"
    # Add the node to the load balancer pool after deployment.
    loadbalancer_pool: 8d8058a5-0fdd-422c-b309-d7cd43847cf5
  tasks:

    - name: Authenticate to our OpenStack cloud
      os_auth:
      register: auth_result

    - name: Verify that the base image exists
      os_image_info:
        image: "{{ image_id }}"
      register: image_data

    - name: Print image details
      debug:
        var: image_data

    - name: Launch instances
      os_server:
        name: "{{ server_name }}"
        image: "{{ image_id }}"
        key_name: jenkins
        timeout: 300
        flavor: "{{ flavor_name }}"
        network: "{{ network }}"
        auto_ip: yes
        wait: no
        state: present
      async: 600
      poll: 0
      register: async_result

    - name: Wait for builds to finish
      async_status:
        jid: "{{ async_result.ansible_job_id }}"
      register: async_poll_result
      until: async_poll_result.finished
      retries: 100

    - name: Wait for instances to be active
      os_server_info:
        cloud: psi
        server: "{{ server_name }}"
        detailed: no
        filters:
          status: ACTIVE
      register: openstack_instances
      until:
        - openstack_instances.openstack_servers | length == 1
      retries: 60
      delay: 15

    - name: Add hosts to inventory
      add_host:
        group: psi_instances
        name: "{{ item.name }}"
        hostname: "{{ item.name }}"
        ansible_hostname: "{{ item.name }}"
        ansible_host: "{{ item.public_v4 }}"
        rhn_registration_username: "{{ ansible_env.RHN_REGISTRATION_USR }}"
        rhn_registration_password: "{{ ansible_env.RHN_REGISTRATION_PSW }}"
      loop: "{{ openstack_instances.openstack_servers }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Wait for instances to respond to ssh
      wait_for:
        host: "{{ item.public_v4 }}"
        port: 22
        search_regex: OpenSSH
        delay: 5
      loop: "{{ openstack_instances.openstack_servers }}"
      loop_control:
        label: "{{ item.name }}"

- hosts: psi_instances
  user: cloud-user
  become: yes
  roles:
    - common
